/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.mercado;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Color;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author micae
 */
public class MenuFuncionario extends javax.swing.JFrame {

    private static MenuFuncionario menuFuncionarioComum;

    public MenuFuncionario() {
        initComponents();
        mostrar();
        setLocationRelativeTo(null);
        getContentPane().setBackground(Color.WHITE);
    }

    public static MenuFuncionario getMenuFuncionarioComum() {
        if (menuFuncionarioComum == null) {
            menuFuncionarioComum = new MenuFuncionario();
        }
        return menuFuncionarioComum;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        bxCodigo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        bxTotal = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        bxQuantidade = new javax.swing.JTextField();
        btAdicionar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabProduto = new javax.swing.JTable();
        btFinalizar = new javax.swing.JButton();
        btDeletar = new javax.swing.JButton();
        btProdutos = new javax.swing.JButton();
        btLimpar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jLabel1.setText("CÓDIGO DO PRODUTO:");

        bxCodigo.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jLabel2.setText("TOTAL:");

        bxTotal.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jLabel3.setText("QUANTIDADE:");

        bxQuantidade.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N

        btAdicionar.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        btAdicionar.setText("ADICIONAR");
        btAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarActionPerformed(evt);
            }
        });

        tabProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "CÓDIGO", "NOME", "VALOR", "QUANTIDADE"
            }
        ));
        jScrollPane1.setViewportView(tabProduto);

        btFinalizar.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        btFinalizar.setText("FINALIZAR");
        btFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFinalizarActionPerformed(evt);
            }
        });

        btDeletar.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        btDeletar.setText("DELETAR");
        btDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeletarActionPerformed(evt);
            }
        });

        btProdutos.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        btProdutos.setText("PRODUTOS");
        btProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btProdutosActionPerformed(evt);
            }
        });

        btLimpar.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        btLimpar.setText("LIMPAR");
        btLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bxCodigo))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btAdicionar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btFinalizar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btDeletar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btProdutos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btLimpar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bxTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(bxQuantidade)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 657, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bxCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bxQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btAdicionar)
                        .addGap(18, 18, 18)
                        .addComponent(btDeletar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btProdutos)
                        .addGap(18, 18, 18)
                        .addComponent(btLimpar)
                        .addGap(18, 18, 18)
                        .addComponent(btFinalizar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bxTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarActionPerformed
        adicionar();
        mostrar();
    }//GEN-LAST:event_btAdicionarActionPerformed

    private void btFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFinalizarActionPerformed
        finalizar();
        mostrar();
        Impressao.getImpressao().setVisible(true);

    }//GEN-LAST:event_btFinalizarActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {
    
    }

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

    }//GEN-LAST:event_formWindowClosing

    private void btDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeletarActionPerformed
        deletar();
        mostrar();
    }//GEN-LAST:event_btDeletarActionPerformed

    private void btProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btProdutosActionPerformed
        ProdutosExistentes.getProdutosExistentes().setVisible(true);
    }//GEN-LAST:event_btProdutosActionPerformed

    private void btLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparActionPerformed
        limpar();
        mostrar();
    }//GEN-LAST:event_btLimparActionPerformed

    public void limpar(){
        try (Connection conexao = new Conexao().getConnection()) {
            String query = "TRUNCATE TABLE compra;";
            PreparedStatement statement = conexao.prepareStatement(query);
            statement.executeUpdate();
            conexao.close();
            bxTotal.setText("");
        } catch (SQLException e) {
            System.out.println("ERRO NO SQL! - finalizar");
        }
    }
    
    public void deletar() {
        int selectedRow = tabProduto.getSelectedRow();
        if (selectedRow != -1) {
            DefaultTableModel model = (DefaultTableModel) tabProduto.getModel();
            String codigo = model.getValueAt(selectedRow, 0).toString();
            model.removeRow(selectedRow);
            try (Connection conexao = new Conexao().getConnection()) {
                String sql = String.format("DELETE FROM compra WHERE id_produto = %s", codigo);
                PreparedStatement stmt = conexao.prepareStatement(sql);
                stmt.executeUpdate();
                stmt.close();
            } catch (SQLException e) {
                System.out.println("ERRO NO SQL! - deletar");
            }
        }
    }

    public void adicionar() {
        try (Connection conexao = new Conexao().getConnection()) {
            String query = String.format("INSERT INTO compra(id_produto, quantidade) VALUES (%s, %s)", bxCodigo.getText(), bxQuantidade.getText());
            PreparedStatement statement = conexao.prepareStatement(query);
            statement.executeUpdate();
            conexao.close();
            bxCodigo.setText("");
            bxQuantidade.setText("");
        } catch (SQLException e) {
            System.out.println("ERRO NO SQL! - adicionar");
        }
    }

    public void mostrar() {
        DefaultTableModel tabModel = (DefaultTableModel) tabProduto.getModel();
        tabModel.setRowCount(0);
        double vt_produto = 0;
        try (Connection conexao = new Conexao().getConnection()) {
            String query = "SELECT c.id_produto, p.nome, p.valor, c.quantidade FROM compra c, produto p WHERE c.id_produto = p.id_produto";
            Statement statement = conexao.createStatement();
            ResultSet resultSet = statement.executeQuery(query);
            while (resultSet.next()) {
                int id = resultSet.getInt("id_produto");
                String nome = resultSet.getString("nome");
                float valor = resultSet.getFloat("valor");
                int quantidade = resultSet.getInt("quantidade");
                tabModel.addRow(new Object[]{id, nome, valor, quantidade});
                vt_produto = vt_produto + (quantidade * valor);
                bxTotal.setText("" + (Math.round(vt_produto * 100) / 100.0));
            }
        } catch (SQLException e) {
            System.out.println("ERRO NO SQL! - mostrar");
        }
    }

    public void finalizar() {
        Document document = new Document();
        try (Connection conexao = new Conexao().getConnection()) {
            String query = "SELECT c.id_produto, p.nome, p.valor, c.quantidade FROM compra c, produto p WHERE c.id_produto = p.id_produto";
            Statement statement = conexao.createStatement();
            ResultSet resultSet = statement.executeQuery(query);
            try {
                PdfWriter.getInstance(document, new FileOutputStream("NFC.pdf"));
            } catch (Exception e) {
                e.printStackTrace();
            }
            while (resultSet.next()) {
                int id = resultSet.getInt("id_produto");
                String nome = resultSet.getString("nome");
                float valor = resultSet.getFloat("valor");
                int quantidade = resultSet.getInt("quantidade");
                document.open();
                document.add(new Paragraph(id + " - " + nome + " - " + valor + " - " + quantidade));
            }
            document.close();
        } catch (SQLException e) {
            System.out.println("ERRO NO SQL! - finalizar");
        } catch (DocumentException ex) {
            System.out.println("ERRO NO DOCUMENTO! - finalizar");
        }

        try (Connection conexao = new Conexao().getConnection()) {
            String query = "TRUNCATE TABLE compra;";
            PreparedStatement statement = conexao.prepareStatement(query);
            statement.executeUpdate();
            conexao.close();
            bxTotal.setText("");
        } catch (SQLException e) {
            System.out.println("ERRO NO SQL! - finalizar");
        }

    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdicionar;
    private javax.swing.JButton btDeletar;
    private javax.swing.JButton btFinalizar;
    private javax.swing.JButton btLimpar;
    private javax.swing.JButton btProdutos;
    private javax.swing.JTextField bxCodigo;
    private javax.swing.JTextField bxQuantidade;
    private javax.swing.JTextField bxTotal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabProduto;
    // End of variables declaration//GEN-END:variables

}
